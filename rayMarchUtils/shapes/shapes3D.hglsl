#pragma once

// Abbreviations
// SD - Shortest Distance

float SDXZPlaneAtYZero(vec3 p) {
	return p.y;
}

float SDSphere(vec3 p,vec3 c,float r) {
	return length(p-c) - r;
}

float SDCapsule(vec3 p,vec3 a,vec3 b ,float r) {
	vec3 ab = b-a;
	vec3 ap = p-a;

	float t = dot(ab,ap)/dot(ab,ab);
	t = clamp(t,0.,1.);

	vec3 c = a + t*ab;
	return length(p-c) - r;

}

float SDTorus(vec3 p,vec2 r) {

	float x = length(p.xz) - r.x;

	return length(vec2(x,p.y)) - r.y;

}

float SDBox(vec3 p,vec3 s){
	return length(max(abs(p) -s,0) );
}

float SDCylinder(vec3 p,vec3 a,vec3 b ,float r) {
	vec3 ab = b-a;
	vec3 ap = p-a;

	float t = dot(ab,ap)/dot(ab,ab);
	//t = clamp(t,0.,1.);

	vec3 c = a + t*ab;

	float x = length(p-c)-r;
	float y = (abs(t-.5)-.5)*length(ab);
	float e = length(max(vec2(x,y),0.));

	float i = min(max(x,y),0);

	return e + i;

}